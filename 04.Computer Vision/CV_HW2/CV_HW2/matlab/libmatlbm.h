/*
 * @(#)libmatlbm.h    generated by: makeheader    Fri Apr 27 00:12:12 2001
 *
 *		built from:	include/copyright.h
 *				mlm/mlmbuiltins.c
 */

#ifndef libmatlbm_h
#define libmatlbm_h


/* $Revision: 1.1 $ */
/*
 * Copyright (c) 1984-1998 by The MathWorks, Inc.
 * All Rights Reserved.
 */

#ifdef __cplusplus
    extern "C" {
#endif

extern mxArray * mlf_colonobj(mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlf_license_checkout(mlfVarargoutList *varargout, mxArray *in1, ...);

extern void mlf_system(mxArray *in1);

extern mxArray * mlfAbs(mxArray *in1);

extern mxArray * mlfAcos(mxArray *in1);

extern mxArray * mlfAcosh(mxArray *in1);

extern void mlfAdd_block(mxArray *in1, ...);

extern void mlfAdd_line(mxArray *in1, ...);

extern mxArray * mlfAll(mxArray *in1, mxArray *in2);

extern mxArray * mlfAnd(mxArray *in1, mxArray *in2);

extern mxArray * mlfAny(mxArray *in1, mxArray *in2);

extern mxArray * mlfApplescript(mlfVarargoutList *varargout, mxArray *in1, ...);

extern mxArray * mlfAsin(mxArray *in1);

extern mxArray * mlfAsinh(mxArray *in1);

extern mxArray * mlfAssignin(mxArray *in1, mxArray *in2, mxArray *in3, ...);

extern mxArray * mlfAtan(mxArray *in1);

extern mxArray * mlfAtanh(mxArray *in1);

extern mxArray * mlfAtan2(mxArray *in1, mxArray *in2);

extern mxArray * mlfBalance(mxArray **out1, mxArray *in1, mxArray *in2);

extern mxArray * mlfBeep(mxArray *in1);

extern mxArray * mlfNBeep(int nargout, mxArray *in1);

extern mxArray * mlfBitand(mxArray *in1, mxArray *in2);

extern mxArray * mlfBitcmp(mxArray *in1, mxArray *in2);

extern mxArray * mlfBitget(mxArray *in1, mxArray *in2);

extern mxArray * mlfBitset(mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfBitshift(mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfBitor(mxArray *in1, mxArray *in2);

extern mxArray * mlfBitxor(mxArray *in1, mxArray *in2);

extern mxArray * mlfCallstats(mlfVarargoutList *varargout, mxArray *in1, ...);

extern mxArray * mlfCat(mxArray *in1, mxArray *in2, ...);

extern mxArray * mlfCd(mxArray *in1);

extern mxArray * mlfNCd(int nargout, mxArray *in1);

extern mxArray * mlfCeil(mxArray *in1);

extern mxArray * mlfCell(mxArray *in1, ...);

extern mxArray * mlfCell2struct(mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfCellhorzcat(mxArray *in1, ...);

extern mxArray * mlfChar(mxArray *in1, ...);

extern mxArray * mlfChdir(mxArray *in1);

extern mxArray * mlfChol(mxArray **out1, mxArray *in1);

extern mxArray * mlfCholinc(mxArray **out1, mxArray *in1, mxArray *in2);

extern mxArray * mlfCholupdate(mxArray **out1, mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfClassName(mxArray *in1, mxArray *in2);

extern void mlfClc( void );

extern mxArray * mlfClock( void );

extern void mlfClose_system(mxArray *in1, ...);

extern mxArray * mlfComputer(mxArray **out1, mxArray **out2);

extern mxArray * mlfConj(mxArray *in1);

extern mxArray * mlfConv2(mxArray *in1, mxArray *in2, mxArray *in3, mxArray *in4);

extern mxArray * mlfCos(mxArray *in1);

extern mxArray * mlfCtranspose(mxArray *in1);

extern mxArray * mlfCosh(mxArray *in1);

extern mxArray * mlfCumprod(mxArray *in1, mxArray *in2);

extern mxArray * mlfCumsum(mxArray *in1, mxArray *in2);

extern mxArray * mlfCputime( void );

extern void mlfDbclear(mxArray *in1, ...);

extern void mlfDbcont( void );

extern void mlfDbdown( void );

extern void mlfDbquit( void );

extern mxArray * mlfDbstack(mxArray **out1);

extern mxArray * mlfDbstatus(mxArray *in1, ...);

extern void mlfDbstep(mxArray *in1);

extern void mlfDbstop(mxArray *in1, ...);

extern void mlfDbtype(mxArray *in1);

extern void mlfDbup( void );

extern void mlfDelete(mxArray *in1, ...);

extern void mlfDelete_block(mxArray *in1);

extern void mlfDelete_line(mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfDet(mxArray *in1);

extern mxArray * mlfDiag(mxArray *in1, mxArray *in2);

extern void mlfDiary(mxArray *in1);

extern mxArray * mlfDiff(mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfDir(mxArray *in1);

extern mxArray * mlfNDir(int nargout, mxArray *in1);

extern void mlfDisp(mxArray *in1);

extern mxArray * mlfDongarra(mxArray *in1);

extern mxArray * mlfDouble(mxArray *in1);

extern mxArray * mlfDos(mxArray **out1, mxArray *in1, mxArray *in2);

extern void mlfEcho(mxArray *in1, ...);

extern mxArray * mlfEdt(mlfVarargoutList *varargout, mxArray *in1, ...);

extern mxArray * mlfEnd(mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfEig(mxArray **out1, mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfEps( void );

extern mxArray * mlfEq(mxArray *in1, mxArray *in2);

extern void mlfError(mxArray *in1);

extern mxArray * mlfErrorstat( void );

extern void mlfErrortrap(mxArray *in1);

extern mxArray * mlfEval(mlfVarargoutList *varargout, mxArray *in1, mxArray *in2);

extern mxArray * mlfEvalc(mlfVarargoutList *varargout, mxArray *in1, mxArray *in2);

extern mxArray * mlfEvalin(mlfVarargoutList *varargout, mxArray *in1, mxArray *in2);

extern mxArray * mlfNEvalin(int nargout, mlfVarargoutList *varargout, mxArray *in1, mxArray *in2);

extern mxArray * mlfExist(mxArray *in1, mxArray *in2);

extern void mlfExit( void );

extern mxArray * mlfExp(mxArray *in1);

extern mxArray * mlfExpm(mxArray *in1);

extern mxArray * mlfEye(mxArray *in1, mxArray *in2);

extern mxArray * mlfFclose(mxArray *in1);

extern mxArray * mlfFeature(mxArray *in1, mxArray *in2);

extern mxArray * mlfNFeature(int nargout, mxArray *in1, mxArray *in2);

extern mxArray * mlfFieldnames(mxArray *in1);

extern mxArray * mlfFields(mlfVarargoutList *varargout, mxArray *in1, ...);

extern mxArray * mlfFeof(mxArray *in1);

extern mxArray * mlfFerror(mxArray **out1, mxArray *in1, mxArray *in2);

extern mxArray * mlfFft(mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfFftn(mxArray *in1, mxArray *in2);

extern mxArray * mlfFftw(mxArray *in1, mxArray *in2);

extern mxArray * mlfFgets(mxArray **out1, mxArray *in1, mxArray *in2);

extern mxArray * mlfFilter(mxArray **out1, mxArray *in1, mxArray *in2, mxArray *in3, mxArray *in4, mxArray *in5);

extern mxArray * mlfFind(mxArray **out1, mxArray **out2, mxArray *in1);

extern mxArray * mlfFind_system(mlfVarargoutList *varargout, mxArray *in1, ...);

extern mxArray * mlfFindstr(mxArray *in1, mxArray *in2);

extern mxArray * mlfFinite(mxArray *in1);

extern mxArray * mlfFix(mxArray *in1);

extern mxArray * mlfFloor(mxArray *in1);

extern mxArray * mlfFlops(mxArray *in1);

extern void mlfFormat(mxArray *in1, mxArray *in2);

extern mxArray * mlfFopen(mxArray **out1, mxArray **out2, mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfFprintf(mxArray *in1, mxArray *in2, ...);

extern mxArray * mlfNFprintf(int nargout, mxArray *in1, mxArray *in2, ...);

extern mxArray * mlfFread(mxArray **out1, mxArray *in1, mxArray *in2, mxArray *in3, mxArray *in4);

extern mxArray * mlfFschange(mlfVarargoutList *varargout, mxArray *in1, ...);

extern mxArray * mlfFscanf(mxArray **out1, mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfFseek(mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfFtell(mxArray *in1);

extern mxArray * mlfFull(mxArray *in1);

extern mxArray * mlfFunc2str(mxArray *in1);

extern mxArray * mlfFunctions(mxArray *in1);

extern mxArray * mlfFunctionscalled(mxArray **out1, mxArray **out2, mxArray *in1, mxArray *in2, mxArray *in3, mxArray *in4, mxArray *in5);

extern mxArray * mlfFwrite(mxArray *in1, mxArray *in2, mxArray *in3, mxArray *in4);

extern mxArray * mlfGe(mxArray *in1, mxArray *in2);

extern mxArray * mlfGet_param(mxArray *in1, mxArray *in2);

extern mxArray * mlfGetenv(mxArray *in1);

extern mxArray * mlfGt(mxArray *in1, mxArray *in2);

extern mxArray * mlfHcreate(mlfVarargoutList *varargout, mxArray *in1, ...);

extern mxArray * mlfHelp(mxArray *in1);

extern void mlfHome( void );

extern mxArray * mlfHess(mxArray **out1, mxArray *in1);

extern mxArray * mlfHorzcat(mxArray *in1, ...);

extern mxArray * mlfHregister(mxArray *in1, ...);

extern mxArray * mlfI( void );

extern mxArray * mlfJ( void );

extern mxArray * mlfIfftn(mxArray *in1, mxArray *in2);

extern mxArray * mlfIfft(mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfImag(mxArray *in1);

extern mxArray * mlfImport(mxArray *in1, mxArray *in2);

extern mxArray * mlfInf( void );

extern void mlfInferiorto(mxArray *in1, ...);

extern mxArray * mlfInmem(mxArray **out1);

extern mxArray * mlfInput(mxArray *in1, mxArray *in2);

extern mxArray * mlfInputname(mxArray *in1);

extern mxArray * mlfInt8(mxArray *in1);

extern mxArray * mlfInt16(mxArray *in1);

extern mxArray * mlfInt32(mxArray *in1);

extern mxArray * mlfInv(mxArray *in1);

extern mxArray * mlfIsa(mxArray *in1, mxArray *in2);

extern mxArray * mlfIsequal(mxArray *in1, mxArray *in2, ...);

extern mxArray * mlfIsempty(mxArray *in1);

extern mxArray * mlfIsfinite(mxArray *in1);

extern mxArray * mlfIsglobal(mxArray *in1);

extern mxArray * mlfIsjava(mxArray *in1, ...);

extern mxArray * mlfIssparse(mxArray *in1);

extern mxArray * mlfIschar(mxArray *in1);

extern mxArray * mlfIslogical(mxArray *in1);

extern mxArray * mlfIsstr(mxArray *in1);

extern mxArray * mlfIsstudent( void );

extern mxArray * mlfIsinf(mxArray *in1);

extern mxArray * mlfIsletter(mxArray *in1);

extern mxArray * mlfIsnan(mxArray *in1);

extern mxArray * mlfIsreal(mxArray *in1);

extern mxArray * mlfIsruntime( void );

extern mxArray * mlfIsspace(mxArray *in1);

extern mxArray * mlfJava(mlfVarargoutList *varargout, mxArray *in1, ...);

extern mxArray * mlfJava_array(mxArray *in1, ...);

extern mxArray * mlfJava_method(mxArray *in1, ...);

extern mxArray * mlfJava_object(mxArray *in1, ...);

extern mxArray * mlfJavaArray(mxArray *in1, ...);

extern mxArray * mlfJavaMethod(mxArray *in1, ...);

extern mxArray * mlfJavaObject(mxArray *in1, ...);

extern void mlfKeyboard( void );

extern mxArray * mlfLastwarn(mxArray *in1);

extern mxArray * mlfLasterr(mxArray *in1);

extern mxArray * mlfLength(mxArray *in1);

extern mxArray * mlfLdivide(mxArray *in1, mxArray *in2);

extern mxArray * mlfLe(mxArray *in1, mxArray *in2);

extern mxArray * mlfLicense( void );

extern mxArray * mlfLinmod(mxArray **out1, mxArray **out2, mxArray **out3, mxArray *in1, mxArray *in2, mxArray *in3, mxArray *in4);

extern mxArray * mlfLog(mxArray *in1);

extern mxArray * mlfLog2(mxArray **out1, mxArray *in1);

extern mxArray * mlfLogical(mxArray *in1);

extern void mlfLookfor(mxArray *in1);

extern mxArray * mlfLower(mxArray *in1);

extern mxArray * mlfLt(mxArray *in1, mxArray *in2);

extern mxArray * mlfLtitr(mxArray *in1, mxArray *in2, mxArray *in3, mxArray *in4);

extern mxArray * mlfLu(mxArray **out1, mxArray **out2, mxArray *in1, mxArray *in2);

extern mxArray * mlfLuinc(mxArray **out1, mxArray **out2, mxArray *in1, mxArray *in2);

extern mxArray * mlfMacprint(mxArray *in1, ...);

extern mxArray * mlfMactools(mlfVarargoutList *varargout, mxArray *in1, ...);

extern mxArray * mlfMatlabpath(mlfVarargoutList *varargout, mxArray *in1, ...);

extern mxArray * mlfNMatlabpath(int nargout, mlfVarargoutList *varargout, mxArray *in1, ...);

extern mxArray * mlfMatlabroot( void );

extern mxArray * mlfMax(mxArray **out1, mxArray *in1, mxArray *in2, mxArray *in3);

extern void mlfMbchar(mxArray *in1);

extern void mlfMbint(mxArray *in1);

extern void mlfMbreal(mxArray *in1);

extern void mlfMbscalar(mxArray *in1);

extern void mlfMbvector(mxArray *in1);

extern mxArray * mlfMethods(mxArray *in1);

extern mxArray * mlfMexext( void );

extern mxArray * mlfMfilename( void );

extern mxArray * mlfMimofr(mxArray *in1, mxArray *in2, mxArray *in3, mxArray *in4, mxArray *in5);

extern mxArray * mlfMin(mxArray **out1, mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfMinus(mxArray *in1, mxArray *in2);

extern void mlfMislocked(mxArray *in1);

extern void mlfMlock( void );

extern mxArray * mlfMldivide(mxArray *in1, mxArray *in2);

extern mxArray * mlfMod(mxArray *in1, mxArray *in2);

extern mxArray * mlfMpower(mxArray *in1, mxArray *in2);

extern mxArray * mlfMrdivide(mxArray *in1, mxArray *in2);

extern mxArray * mlfMtimes(mxArray *in1, mxArray *in2);

extern mxArray * mlfMore(mxArray *in1);

extern void mlfMunlock(mxArray *in1);

extern mxArray * mlfNan( void );

extern mxArray * mlfNargin(mxArray *in1);

extern mxArray * mlfNargout(mxArray *in1);

extern mxArray * mlfNdims(mxArray *in1);

extern mxArray * mlfNe(mxArray *in1, mxArray *in2);

extern mxArray * mlfNeq(mxArray *in1, mxArray *in2);

extern void mlfNew_system(mxArray *in1);

extern mxArray * mlfNorm(mxArray *in1, mxArray *in2);

extern mxArray * mlfNot(mxArray *in1);

extern mxArray * mlfNumel(mxArray *in1);

extern mxArray * mlfOnes(mxArray *in1, ...);

extern void mlfOpen_system(mxArray *in1, mxArray *in2);

extern mxArray * mlfOr(mxArray *in1, mxArray *in2);

extern void mlfPack( void );

extern void mlfPause(mxArray *in1);

extern void mlfPfile(mxArray *in1, ...);

extern mxArray * mlfPermute(mxArray *in1, mxArray *in2);

extern mxArray * mlfPi( void );

extern mxArray * mlfPlus(mxArray *in1, mxArray *in2);

extern mxArray * mlfPow2(mxArray *in1, mxArray *in2);

extern mxArray * mlfProd(mxArray *in1, mxArray *in2);

extern mxArray * mlfPower(mxArray *in1, mxArray *in2);

extern mxArray * mlfQr(mxArray **out1, mxArray **out2, mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfQrupdate(mxArray **out1, mxArray *in1, mxArray *in2, mxArray *in3, mxArray *in4);

extern void mlfQuit(mxArray *in1);

extern mxArray * mlfQz(mxArray **out1, mxArray **out2, mxArray **out3, mxArray **out4, mxArray **out5, mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfRcond(mxArray *in1);

extern mxArray * mlfRdivide(mxArray *in1, mxArray *in2);

extern mxArray * mlfReal(mxArray *in1);

extern mxArray * mlfRehash(mxArray *in1);

extern mxArray * mlfRem(mxArray *in1, mxArray *in2);

extern mxArray * mlfReshape(mxArray *in1, mxArray *in2, ...);

extern mxArray * mlfRound(mxArray *in1);

extern void mlfRuntime(mxArray *in1, mxArray *in2);

extern mxArray * mlfSchur(mxArray **out1, mxArray *in1);

extern void mlfSet_param(mxArray *in1, ...);

extern mxArray * mlfSetstr(mxArray *in1);

extern mxArray * mlfSign(mxArray *in1);

extern mxArray * mlfSim(mxArray **out1, mxArray **out2, mxArray *in1, mxArray *in2, mxArray *in3, mxArray *in4, ...);

extern mxArray * mlfSimget(mxArray *in1, mxArray *in2);

extern mxArray * mlfSimset(mxArray *in1, ...);

extern mxArray * mlfSin(mxArray *in1);

extern mxArray * mlfSingle(mxArray *in1);

extern mxArray * mlfSinh(mxArray *in1);

extern mxArray * mlfSize(mlfVarargoutList *varargout, mxArray *in1, mxArray *in2);

extern mxArray * mlfSize2d(mxArray **out1, mxArray *in1, mxArray *in2);

extern void mlfSldebug(mxArray *in1);

extern mxArray * mlfSort(mxArray **out1, mxArray *in1, mxArray *in2);

extern mxArray * mlfSparse(mxArray *in1, mxArray *in2, mxArray *in3, mxArray *in4, mxArray *in5, mxArray *in6);

extern mxArray * mlfSparsfun(mxArray **out1, mxArray **out2, mxArray **out3, mxArray **out4, mxArray *in1, ...);

extern mxArray * mlfSprintf(mxArray **out1, mxArray *in1, mxArray *in2, ...);

extern mxArray * mlfSqrt(mxArray *in1);

extern mxArray * mlfSscanf(mxArray **out1, mxArray **out2, mxArray **out3, mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfStr2func(mxArray *in1);

extern mxArray * mlfStrrep(mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfStrcmp(mxArray *in1, mxArray *in2);

extern mxArray * mlfStrcmpi(mxArray *in1, mxArray *in2);

extern mxArray * mlfStrncmp(mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfStrncmpi(mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfStruct(mxArray *in1, ...);

extern mxArray * mlfStruct2cell(mxArray *in1);

extern mxArray * mlfSubsasgn(mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfSubsindex(mxArray *in1);

extern mxArray * mlfSubsref(mlfVarargoutList *varargout, mxArray *in1, mxArray *in2);

extern mxArray * mlfSum(mxArray *in1, mxArray *in2);

extern void mlfSuperiorto(mxArray *in1, ...);

extern mxArray * mlfSvd(mxArray **out1, mxArray **out2, mxArray *in1, mxArray *in2);

extern mxArray * mlfSystem_dependent(mxArray **out1, mxArray **out2, mxArray *in1, ...);

extern mxArray * mlfTan(mxArray *in1);

extern mxArray * mlfTanh(mxArray *in1);

extern mxArray * mlfTimes(mxArray *in1, mxArray *in2);

extern mxArray * mlfTranspose(mxArray *in1);

extern mxArray * mlfTrmginput(mlfVarargoutList *varargout, mxArray *in1, ...);

extern mxArray * mlfTril(mxArray *in1, mxArray *in2);

extern mxArray * mlfTriu(mxArray *in1, mxArray *in2);

extern void mlfType(mxArray *in1);

extern mxArray * mlfUint8(mxArray *in1);

extern mxArray * mlfUint16(mxArray *in1);

extern mxArray * mlfUint32(mxArray *in1);

extern mxArray * mlfUminus(mxArray *in1);

extern mxArray * mlfUnaryminus(mxArray *in1);

extern mxArray * mlfUplus(mxArray *in1);

extern mxArray * mlfUpper(mxArray *in1);

extern mxArray * mlfUnix(mxArray **out1, mxArray *in1);

extern mxArray * mlfVersion(mxArray **out1);

extern mxArray * mlfVertcat(mxArray *in1, ...);

extern mxArray * mlfVms(mxArray **out1, mxArray *in1);

extern mxArray * mlfWarning(mxArray **out1, mxArray *in1);

extern mxArray * mlfNWarning(int nargout, mxArray **out1, mxArray *in1);

extern mxArray * mlfWhich(mxArray *in1, ...);

extern mxArray * mlfWho(mxArray *in1, ...);

extern mxArray * mlfWhos(mxArray *in1, ...);

extern mxArray * mlfWhat(mxArray *in1);

extern mxArray * mlfXlate(mlfVarargoutList *varargout, mxArray *in1, ...);

extern mxArray * mlfZeros(mxArray *in1, ...);

extern mxArray * mlfDeblank(mxArray *in1);

extern mxArray * mlfIntersect(mxArray **out1, mxArray **out2, mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfNIntersect(int nargout, mxArray **out1, mxArray **out2, mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfIsmember(mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfSetdiff(mxArray **out1, mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfSetxor(mxArray **out1, mxArray **out2, mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfNSetxor(int nargout, mxArray **out1, mxArray **out2, mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfStrcat(mxArray *in1, ...);

extern mxArray * mlfStrmatch(mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfUnion(mxArray **out1, mxArray **out2, mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfNUnion(int nargout, mxArray **out1, mxArray **out2, mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfUnique(mxArray **out1, mxArray **out2, mxArray *in1, mxArray *in2);

extern mxArray * mlfNUnique(int nargout, mxArray **out1, mxArray **out2, mxArray *in1, mxArray *in2);

extern void mlx_colonobj(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlx_license_checkout(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlx_system(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxAbs(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxAcos(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxAcosh(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxAdd_block(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxAdd_line(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxAll(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxAnd(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxAny(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxApplescript(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxAsin(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxAsinh(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxAssignin(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxAtan(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxAtanh(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxAtan2(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxBalance(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxBeep(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxBitand(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxBitcmp(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxBitget(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxBitset(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxBitshift(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxBitor(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxBitxor(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxCallstats(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxCat(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxCd(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxCeil(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxCell(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxCell2struct(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxCellhorzcat(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxChar(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxChdir(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxChol(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxCholinc(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxCholupdate(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxClassName(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxClc(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxClock(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxClose_system(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxComputer(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxConj(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxConv2(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxCos(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxCtranspose(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxCosh(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxCumprod(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxCumsum(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxCputime(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxDbclear(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxDbcont(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxDbdown(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxDbquit(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxDbstack(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxDbstatus(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxDbstep(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxDbstop(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxDbtype(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxDbup(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxDelete(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxDelete_block(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxDelete_line(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxDet(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxDiag(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxDiary(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxDiff(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxDir(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxDisp(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxDongarra(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxDouble(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxDos(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxEcho(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxEdt(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxEnd(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxEig(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxEps(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxEq(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxError(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxErrorstat(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxErrortrap(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxEval(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxEvalc(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxEvalin(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxExist(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxExit(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxExp(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxExpm(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxEye(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFclose(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFeature(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFieldnames(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFields(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFeof(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFerror(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFft(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFftn(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFftw(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFgets(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFilter(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFind(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFind_system(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFindstr(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFinite(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFix(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFloor(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFlops(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFormat(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFopen(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFprintf(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFread(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFschange(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFscanf(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFseek(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFtell(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFull(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFunc2str(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFunctions(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFunctionscalled(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFwrite(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxGe(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxGet_param(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxGetenv(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxGt(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxHcreate(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxHelp(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxHome(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxHess(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxHorzcat(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxHregister(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxI(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxJ(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxIfftn(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxIfft(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxImag(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxImport(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxInf(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxInferiorto(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxInmem(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxInput(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxInputname(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxInt8(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxInt16(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxInt32(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxInv(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxIsa(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxIsequal(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxIsempty(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxIsfinite(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxIsglobal(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxIsjava(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxIssparse(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxIschar(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxIslogical(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxIsstr(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxIsstudent(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxIsinf(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxIsletter(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxIsnan(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxIsreal(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxIsruntime(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxIsspace(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxJava(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxJava_array(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxJava_method(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxJava_object(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxJavaArray(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxJavaMethod(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxJavaObject(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxKeyboard(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxLastwarn(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxLasterr(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxLength(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxLdivide(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxLe(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxLicense(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxLinmod(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxLog(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxLog2(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxLogical(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxLookfor(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxLower(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxLt(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxLtitr(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxLu(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxLuinc(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxMacprint(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxMactools(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxMatlabpath(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxMatlabroot(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxMax(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxMbchar(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxMbint(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxMbreal(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxMbscalar(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxMbvector(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxMethods(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxMexext(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxMfilename(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxMimofr(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxMin(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxMinus(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxMislocked(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxMlock(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxMldivide(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxMod(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxMpower(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxMrdivide(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxMtimes(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxMore(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxMunlock(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxNan(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxNargin(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxNargout(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxNdims(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxNe(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxNeq(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxNew_system(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxNorm(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxNot(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxNumel(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxOnes(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxOpen_system(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxOr(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxPack(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxPause(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxPfile(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxPermute(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxPi(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxPlus(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxPow2(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxProd(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxPower(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxQr(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxQrupdate(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxQuit(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxQz(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxRcond(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxRdivide(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxReal(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxRehash(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxRem(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxReshape(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxRound(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxRuntime(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSchur(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSet_param(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSetstr(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSign(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSim(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSimget(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSimset(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSin(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSingle(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSinh(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSize(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSize2d(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSldebug(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSort(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSparse(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSparsfun(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSprintf(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSqrt(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSscanf(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxStr2func(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxStrrep(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxStrcmp(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxStrcmpi(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxStrncmp(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxStrncmpi(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxStruct(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxStruct2cell(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSubsasgn(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSubsindex(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSubsref(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSum(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSuperiorto(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSvd(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSystem_dependent(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxTan(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxTanh(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxTimes(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxTranspose(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxTrmginput(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxTril(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxTriu(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxType(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxUint8(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxUint16(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxUint32(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxUminus(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxUnaryminus(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxUplus(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxUpper(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxUnix(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxVersion(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxVertcat(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxVms(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxWarning(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxWhich(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxWho(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxWhos(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxWhat(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxXlate(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxZeros(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxDeblank(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxIntersect(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxIsmember(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSetdiff(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSetxor(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxStrcat(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxStrmatch(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxUnion(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxUnique(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

#ifdef __cplusplus
    }	/* extern "C" */
#endif

#endif /* libmatlbm_h */
