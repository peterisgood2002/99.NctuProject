/*
 * @(#)libsgl.h    generated by: makeheader    Sat Jan  6 12:03:10 2001
 *
 *		built from:	include/copyright.h
 *				include/libsgl_defs.h
 *				mlm/hgwrappers.c
 *				mlm/hgdispatch.c
 */

#ifndef libsgl_h
#define libsgl_h


/* $Revision: 1.1 $ */
/*
 * Copyright (c) 1984-1998 by The MathWorks, Inc.
 * All Rights Reserved.
 */


/*
 * $Revision: 1.3 $
 */

#ifndef libsgl_defs_h
#define libsgl_defs_h

#ifdef __cplusplus
    extern "C" {
#endif

/* Initialize the Handle Graphics system: was hgInitialize */
extern void mlfHGInitialize(int *argc, const char *argv[]);
/* Evaluate display events until all windows have been closed */
extern void mlfHGWaitForFiguresToDie(void);
/* Cleanup */
extern void mlfHGTerminate(void);

/* Compiler HG library initialize function */
extern void mclLibhgInit(int * ref, mex_information info);

/* Compiler HG library terminate function */
extern void mclLibhgTerm(int * ref, mex_information info);

/* Compiler HG main function */ 
extern int mclMainhg( int argc, const char **argv, mxFunctionPtr mlxfn, bool nout, mex_information info );

#ifdef __cplusplus
    }	/* extern "C" */
#endif

#endif /* libsgl_defs_h */

#ifdef __cplusplus
    extern "C" {
#endif

extern mxArray * mlfAxes(mxArray *in1, ...);

extern mxArray * mlfNAxes(int nargout, mxArray *in1, ...);

extern mxArray * mlfContourc(mxArray *in1, ...);

extern mxArray * mlfNContourc(int nargout, mxArray *in1, ...);

extern mxArray * mlfCopyobj(mxArray *in1, mxArray *in2);

extern mxArray * mlfDragrect(mxArray *in1, mxArray *in2);

extern void mlfDrawnow(mxArray *in1);

extern mxArray * mlfFigure(mxArray *in1, ...);

extern mxArray * mlfNFigure(int nargout, mxArray *in1, ...);

extern mxArray * mlfFill(mxArray *in1, ...);

extern mxArray * mlfNFill(int nargout, mxArray *in1, ...);

extern mxArray * mlfFill3(mxArray *in1, ...);

extern mxArray * mlfNFill3(int nargout, mxArray *in1, ...);

extern mxArray * mlfFindobj(mxArray *in1, ...);

extern mxArray * mlfFrame2im(mxArray **out1, mxArray *in1);

extern mxArray * mlfGet(mxArray *in1, ...);

extern mxArray * mlfNGet(int nargout, mxArray *in1, ...);

extern mxArray * mlfGetframe(mxArray **out1, mxArray *in1, mxArray *in2);

extern mxArray * mlfHandle2struct(mxArray *in1);

extern mxArray * mlfHardcopy(mxArray *in1, mxArray *in2, mxArray *in3, ...);

extern mxArray * mlfHittest(mxArray *in1, mxArray *in2);

extern mxArray * mlfIm2frame(mxArray *in1, mxArray *in2);

extern mxArray * mlfImage(mxArray *in1, ...);

extern mxArray * mlfNImage(int nargout, mxArray *in1, ...);

extern mxArray * mlfIshandle(mxArray *in1);

extern mxArray * mlfLight(mxArray *in1, ...);

extern mxArray * mlfNLight(int nargout, mxArray *in1, ...);

extern mxArray * mlfLine(mxArray *in1, ...);

extern mxArray * mlfNLine(int nargout, mxArray *in1, ...);

extern mxArray * mlfLoglog(mxArray *in1, ...);

extern mxArray * mlfNLoglog(int nargout, mxArray *in1, ...);

extern void mlfMovie(mxArray *in1, ...);

extern mxArray * mlfPatch(mxArray *in1, ...);

extern mxArray * mlfNPatch(int nargout, mxArray *in1, ...);

extern mxArray * mlfPlot(mxArray *in1, ...);

extern mxArray * mlfNPlot(int nargout, mxArray *in1, ...);

extern mxArray * mlfPlot3(mxArray *in1, ...);

extern mxArray * mlfNPlot3(int nargout, mxArray *in1, ...);

extern mxArray * mlfRbbox(mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfRectangle(mxArray *in1, ...);

extern mxArray * mlfNRectangle(int nargout, mxArray *in1, ...);

extern void mlfReset(mxArray *in1);

extern void mlfRmappdata(mxArray *in1, ...);

extern void mlfSelectmoveresize( void );

extern mxArray * mlfSemilogx(mxArray *in1, ...);

extern mxArray * mlfNSemilogx(int nargout, mxArray *in1, ...);

extern mxArray * mlfSemilogy(mxArray *in1, ...);

extern mxArray * mlfNSemilogy(int nargout, mxArray *in1, ...);

extern mxArray * mlfSet(mxArray *in1, ...);

extern mxArray * mlfNSet(int nargout, mxArray *in1, ...);

extern void mlfSetappdata(mxArray *in1, ...);

extern mxArray * mlfStruct2handle(mxArray *in1, ...);

extern mxArray * mlfSurface(mxArray *in1, ...);

extern mxArray * mlfNSurface(int nargout, mxArray *in1, ...);

extern mxArray * mlfText(mxArray *in1, ...);

extern mxArray * mlfNText(int nargout, mxArray *in1, ...);

extern mxArray * mlfU_new(mxArray *in1, ...);

extern mxArray * mlfU_set(mxArray *in1, ...);

extern mxArray * mlfU_get(mxArray *in1, ...);

extern mxArray * mlfU_find(mxArray *in1, ...);

extern mxArray * mlfU_copy(mxArray *in1, ...);

extern mxArray * mlfU_up(mxArray *in1, ...);

extern mxArray * mlfU_down(mxArray *in1, ...);

extern mxArray * mlfU_left(mxArray *in1, ...);

extern mxArray * mlfU_right(mxArray *in1, ...);

extern mxArray * mlfU_delete(mxArray *in1, ...);

extern mxArray * mlfU_isa(mxArray *in1, ...);

extern mxArray * mlfU_properties(mxArray *in1, ...);

extern mxArray * mlfU_subprop(mxArray *in1, ...);

extern mxArray * mlfU_findapp(mxArray *in1, ...);

extern mxArray * mlfU_findclass(mxArray *in1, ...);

extern mxArray * mlfU_findprop(mxArray *in1, ...);

extern mxArray * mlfU_findevent(mxArray *in1, ...);

extern mxArray * mlfU_findtype(mxArray *in1, ...);

extern mxArray * mlfU_findroot(mxArray *in1, ...);

extern mxArray * mlfU_convert_to_gobject(mxArray *in1, ...);

extern mxArray * mlfU_undo(mxArray *in1, ...);

extern mxArray * mlfU_redo(mxArray *in1, ...);

extern mxArray * mlfU_commit(mxArray *in1, ...);

extern mxArray * mlfUicontrol(mxArray *in1, ...);

extern mxArray * mlfNUicontrol(int nargout, mxArray *in1, ...);

extern mxArray * mlfUicontextmenu(mxArray *in1, ...);

extern mxArray * mlfNUicontextmenu(int nargout, mxArray *in1, ...);

extern mxArray * mlfUigetfile(mxArray **out1, mxArray *in1, mxArray *in2, mxArray *in3, mxArray *in4);

extern mxArray * mlfUiputfile(mxArray **out1, mxArray *in1, mxArray *in2, mxArray *in3, mxArray *in4);

extern mxArray * mlfUisetcolor(mxArray *in1, mxArray *in2);

extern mxArray * mlfUisetfont(mxArray *in1, mxArray *in2);

extern mxArray * mlfUimenu(mxArray *in1, ...);

extern mxArray * mlfNUimenu(int nargout, mxArray *in1, ...);

extern void mlfUimenufcn(mxArray *in1, ...);

extern mxArray * mlfUipushtool(mxArray *in1, ...);

extern mxArray * mlfNUipushtool(int nargout, mxArray *in1, ...);

extern mxArray * mlfUitoggletool(mxArray *in1, ...);

extern mxArray * mlfNUitoggletool(int nargout, mxArray *in1, ...);

extern mxArray * mlfUitoolbar(mxArray *in1, ...);

extern mxArray * mlfNUitoolbar(int nargout, mxArray *in1, ...);

extern void mlfWaitfor(mxArray *in1, mxArray *in2, mxArray *in3);

extern mxArray * mlfWaitforbuttonpress( void );

extern mxArray * mlfNWaitforbuttonpress(int nargout);

extern void mlxAxes(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxContourc(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxCopyobj(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxDragrect(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxDrawnow(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFigure(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFill(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFill3(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFindobj(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxFrame2im(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxGet(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxGetframe(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxHandle2struct(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxHardcopy(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxHittest(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxIm2frame(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxImage(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxIshandle(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxLight(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxLine(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxLoglog(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxMovie(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxPatch(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxPlot(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxPlot3(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxRbbox(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxRectangle(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxReset(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxRmappdata(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSelectmoveresize(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSemilogx(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSemilogy(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSet(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSetappdata(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxStruct2handle(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxSurface(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxText(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxU_new(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxU_set(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxU_get(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxU_find(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxU_copy(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxU_up(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxU_down(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxU_left(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxU_right(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxU_delete(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxU_isa(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxU_properties(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxU_subprop(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxU_findapp(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxU_findclass(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxU_findprop(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxU_findevent(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxU_findtype(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxU_findroot(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxU_convert_to_gobject(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxU_undo(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxU_redo(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxU_commit(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxUicontrol(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxUicontextmenu(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxUigetfile(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxUiputfile(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxUisetcolor(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxUisetfont(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxUimenu(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxUimenufcn(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxUipushtool(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxUitoggletool(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxUitoolbar(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxWaitfor(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);

extern void mlxWaitforbuttonpress(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[]);


extern void mclRegisterHGFunctions( int t_size, void *table );

#ifdef __cplusplus
    }	/* extern "C" */
#endif

#endif /* libsgl_h */
